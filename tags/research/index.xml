<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Research on </title>
    <link>https://rcanovas.github.io/tags/research/index.xml</link>
    <description>Recent content in Research on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2017 Rodrigo Canovas</copyright>
    <atom:link href="/tags/research/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Affix Trees</title>
      <link>https://rcanovas.github.io/project/affix_tree/</link>
      <pubDate>Fri, 28 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://rcanovas.github.io/project/affix_tree/</guid>
      <description>&lt;p&gt;The Suffix Tree, a crucial and versatile data structure for string analysis of large texts, is often used in pattern matching and in bioinformatics applications. The Affix Tree generalizes the Suffix Tree in that it supports full tree functionalities in both search directions. The bottleneck of Affix Trees is their space requirement for storing the data structure. Here, we discuss existing representations and classify them into two categories: Synchronous and Asynchronous. We design Compressed Affix Tree indexes in both categories and explored how to support all tree operations bidirectionally. This work compares alternative approaches for compressing the Affix Tree, measuring their space and time trade-offs for different operations. Moreover, to our knowledge, this is the first work that compares all Compressed Affix Tree implementations offering a practical benchmark for this structure.&lt;/p&gt;

&lt;p&gt;code: &lt;a href=&#34;https://github.com/rcanovas/AffixTree&#34; target=&#34;_blank&#34;&gt;https://github.com/rcanovas/AffixTree&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CSAM</title>
      <link>https://rcanovas.github.io/project/csam/</link>
      <pubDate>Fri, 28 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://rcanovas.github.io/project/csam/</guid>
      <description>&lt;p&gt;We describe CSAM (Compressed SAM format), a compression approach offering lossless and lossy compression for SAM files. The structures and techniques proposed are suitable for representing SAM files, as well as supporting fast access to the compressed information. They generate more compact lossless representations than BAM, which is currently the preferred lossless compressed SAM-equivalent format; and are self-contained, that is, they do not depend on any external resources to compress or decompress SAM files.&lt;/p&gt;

&lt;p&gt;code: &lt;a href=&#34;https://github.com/rcanovas/libCSAM&#34; target=&#34;_blank&#34;&gt;https://github.com/rcanovas/libCSAM&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
